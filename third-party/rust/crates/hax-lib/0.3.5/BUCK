# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "hax-lib-vendor",
    urls = ["https://static.crates.io/crates/hax-lib/hax-lib-0.3.5.crate"],
    sha256 = "74d9ba66d1739c68e0219b2b2238b5c4145f491ebf181b9c6ab561a19352ae86",
    type = "tar.gz",
    strip_prefix = "hax-lib-0.3.5",
    out = "vendor",
)

cargo_manifest(
    name = "hax-lib-manifest",
    vendor = ":hax-lib-vendor",
)

rust_library(
    name = "hax-lib",
    srcs = [":hax-lib-vendor"],
    crate = "hax_lib",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :hax-lib-build-script-run[out_dir])",
    },
    features = [
        "default",
        "macros",
    ],
    rustc_flags = [
        "@$(location :hax-lib-build-script-run[rustc_flags])",
        "@$(location :hax-lib-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = ["//third-party/rust/crates/hax-lib-macros/0.3.5:hax-lib-macros"],
)

rust_binary(
    name = "hax-lib-build-script-build",
    srcs = [":hax-lib-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    features = [
        "default",
        "macros",
    ],
    rustc_flags = ["@$(location :hax-lib-manifest[env_flags])"],
    visibility = [],
)

buildscript_run(
    name = "hax-lib-build-script-run",
    package_name = "hax-lib",
    buildscript_rule = ":hax-lib-build-script-build",
    env_srcs = [":hax-lib-manifest[env_dict]"],
    features = [
        "default",
        "macros",
    ],
    version = "0.3.5",
    manifest_dir = ":hax-lib-vendor",
    visibility = ["PUBLIC"],
)
