# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "quote-vendor",
    urls = ["https://static.crates.io/crates/quote/quote-1.0.41.crate"],
    sha256 = "ce25767e7b499d1b604768e7cde645d14cc8584231ea6b295e9c9eb22c02e1d1",
    type = "tar.gz",
    strip_prefix = "quote-1.0.41",
    out = "vendor",
)

cargo_manifest(
    name = "quote-manifest",
    vendor = ":quote-vendor",
)

rust_library(
    name = "quote",
    srcs = [":quote-vendor"],
    crate = "quote",
    crate_root = "vendor/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :quote-build-script-run[out_dir])",
    },
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = [
        "@$(location :quote-build-script-run[rustc_flags])",
        "@$(location :quote-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = ["//third-party/rust/crates/proc-macro2/1.0.103:proc-macro2"],
)

rust_binary(
    name = "quote-build-script-build",
    srcs = [":quote-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2018",
    features = [
        "default",
        "proc-macro",
    ],
    rustc_flags = ["@$(location :quote-manifest[env_flags])"],
    visibility = [],
)

buildscript_run(
    name = "quote-build-script-run",
    package_name = "quote",
    buildscript_rule = ":quote-build-script-build",
    env_srcs = [":quote-manifest[env_dict]"],
    features = [
        "default",
        "proc-macro",
    ],
    version = "1.0.41",
    manifest_dir = ":quote-vendor",
    visibility = ["PUBLIC"],
)
