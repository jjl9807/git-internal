# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "nix-vendor",
    urls = ["https://static.crates.io/crates/nix/nix-0.29.0.crate"],
    sha256 = "71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46",
    type = "tar.gz",
    strip_prefix = "nix-0.29.0",
    out = "vendor",
)

cargo_manifest(
    name = "nix-manifest",
    vendor = ":nix-vendor",
)

rust_library(
    name = "nix",
    srcs = [":nix-vendor"],
    crate = "nix",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :nix-build-script-run[out_dir])",
    },
    features = [
        "default",
        "mman",
    ],
    rustc_flags = [
        "@$(location :nix-build-script-run[rustc_flags])",
        "@$(location :nix-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "//third-party/rust/crates/bitflags/2.10.0:bitflags",
        "//third-party/rust/crates/cfg-if/1.0.4:cfg-if",
        "//third-party/rust/crates/libc/0.2.177:libc",
    ],
)

rust_binary(
    name = "nix-build-script-build",
    srcs = [":nix-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    features = [
        "default",
        "mman",
    ],
    rustc_flags = ["@$(location :nix-manifest[env_flags])"],
    visibility = [],
    deps = ["//third-party/rust/crates/cfg_aliases/0.2.1:cfg_aliases"],
)

buildscript_run(
    name = "nix-build-script-run",
    package_name = "nix",
    buildscript_rule = ":nix-build-script-build",
    env_srcs = [":nix-manifest[env_dict]"],
    features = [
        "default",
        "mman",
    ],
    version = "0.29.0",
    manifest_dir = ":nix-vendor",
    visibility = ["PUBLIC"],
)
