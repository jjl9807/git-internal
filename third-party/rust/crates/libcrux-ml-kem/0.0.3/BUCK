# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "libcrux-ml-kem-vendor",
    urls = ["https://static.crates.io/crates/libcrux-ml-kem/libcrux-ml-kem-0.0.3.crate"],
    sha256 = "5d368d3e8d6a74e277178d54921eca112a1e6b7837d7d8bc555091acb5d817f5",
    type = "tar.gz",
    strip_prefix = "libcrux-ml-kem-0.0.3",
    out = "vendor",
)

cargo_manifest(
    name = "libcrux-ml-kem-manifest",
    vendor = ":libcrux-ml-kem-vendor",
)

rust_library(
    name = "libcrux-ml-kem",
    srcs = [":libcrux-ml-kem-vendor"],
    crate = "libcrux_ml_kem",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :libcrux-ml-kem-build-script-run[out_dir])",
    },
    features = [
        "alloc",
        "default",
        "default-no-std",
        "mlkem1024",
        "mlkem512",
        "mlkem768",
        "rand",
        "std",
    ],
    rustc_flags = [
        "@$(location :libcrux-ml-kem-build-script-run[rustc_flags])",
        "@$(location :libcrux-ml-kem-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "//third-party/rust/crates/hax-lib/0.3.5:hax-lib",
        "//third-party/rust/crates/libcrux-intrinsics/0.0.3:libcrux-intrinsics",
        "//third-party/rust/crates/libcrux-platform/0.0.2:libcrux-platform",
        "//third-party/rust/crates/libcrux-secrets/0.0.3:libcrux-secrets",
        "//third-party/rust/crates/libcrux-sha3/0.0.3:libcrux-sha3",
        "//third-party/rust/crates/rand/0.9.2:rand",
    ],
)

rust_binary(
    name = "libcrux-ml-kem-build-script-build",
    srcs = [":libcrux-ml-kem-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    features = [
        "alloc",
        "default",
        "default-no-std",
        "mlkem1024",
        "mlkem512",
        "mlkem768",
        "rand",
        "std",
    ],
    rustc_flags = ["@$(location :libcrux-ml-kem-manifest[env_flags])"],
    visibility = [],
)

buildscript_run(
    name = "libcrux-ml-kem-build-script-run",
    package_name = "libcrux-ml-kem",
    buildscript_rule = ":libcrux-ml-kem-build-script-build",
    env_srcs = [":libcrux-ml-kem-manifest[env_dict]"],
    features = [
        "alloc",
        "default",
        "default-no-std",
        "mlkem1024",
        "mlkem512",
        "mlkem768",
        "rand",
        "std",
    ],
    version = "0.0.3",
    manifest_dir = ":libcrux-ml-kem-vendor",
    visibility = ["PUBLIC"],
)
